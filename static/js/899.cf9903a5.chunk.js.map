{"version":3,"file":"static/js/899.cf9903a5.chunk.js","mappings":"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","sources":["Services/FetchMovieDetails.js","Services/FetchMovieCredits.js","Components/Cast/Cast.js","Services/FetchMovieReviews.js","Components/Reviews/Reviews.js","Components/MovieDetailsPage/MovieDetailsPage.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import fetchInfo from './fetchInfo.json';\r\n\r\nconst FetchMovieDetails = (id) => {\r\n\r\n    return fetch(`${fetchInfo.URL}/movie/${id}?api_key=${fetchInfo.KEY}&language=en-US`).then(res => res.json())\r\n}\r\n\r\nexport default FetchMovieDetails","import fetchInfo from './fetchInfo.json';\r\n\r\n\r\nconst FetchMovieCredits = (id) => {\r\n\r\n    return fetch(`${fetchInfo.URL}/movie/${id}/credits?api_key=${fetchInfo.KEY}&language=en-US`).then(res => res.json())\r\n\r\n}\r\n\r\nexport default FetchMovieCredits","import FetchMovieCredits from \"../../Services/FetchMovieCredits\"\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst Cast = () => {\r\n    const { params } = useRouteMatch()\r\n    const [cast, setCast] = useState('')\r\n\r\n    useEffect(() => {\r\n        FetchMovieCredits(params.movieId).then(res => {\r\n            setCast(res.cast)\r\n        })\r\n\r\n    }, [])\r\n\r\n    \r\n    if (cast.length >= 1) {\r\n        return <ul className=\"cast-list\">\r\n            {cast.map(el => {\r\n                return <li className=\"cast-item\" key={el.id}>\r\n                    {el.profile_path && <img src={`https://image.tmdb.org/t/p/w500${el.profile_path}`} alt={el.name} />}\r\n                    {!el.profile_path && <div className=\"notFound\"><p>Not Found</p></div>}\r\n                    <p>{el.name}: {el.character}</p>\r\n                </li>\r\n            })}\r\n        </ul>\r\n    } else {\r\n        return <h1>Not Found</h1>\r\n    }\r\n}\r\n\r\nexport default Cast","import fetchInfo from './fetchInfo.json';\r\n\r\nconst FetchMovieReviews = (id) => {\r\n    return fetch(`${fetchInfo.URL}/movie/${id}/reviews?api_key=${fetchInfo.KEY}&language=en-US&page=1`).then(res => res.json());\r\n}\r\n\r\nexport default FetchMovieReviews;","import FetchMovieReviews from \"../../Services/FetchMovieReviews\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nconst Reviews = () => {\r\n    const { params } = useRouteMatch()\r\n    const [reviews, setReviwes] = useState('');\r\n\r\n    useEffect(() => {\r\n        FetchMovieReviews(params.movieId).then(data => {\r\n            setReviwes(data.results)\r\n        })\r\n\r\n    }, [])\r\n\r\n    console.log(reviews);\r\n    if (reviews.length >= 1) {\r\n        return <ul className=\"reviews-list\">\r\n            {reviews.map((el, i) => {\r\n                return <li className=\"review-item\" key={i}>\r\n                    <h2>{el.author}:</h2>\r\n                    <p>{el.content}</p>\r\n                </li>\r\n            })}\r\n        </ul>\r\n    } else {\r\n       return <h1>Not Found</h1>\r\n    }\r\n}\r\n\r\nexport default Reviews;","import { useRouteMatch, NavLink, Route } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FetchMovieDetails from \"../../Services/FetchMovieDetails\";\r\nimport Cast from \"../Cast\";\r\nimport Reviews from \"../Reviews\";\r\n\r\nconst MovieDetailsPage = () => {\r\n    const [film, setFilm] = useState('')\r\n    const { params, url } = useRouteMatch()\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        FetchMovieDetails(params.movieId).then(data => {\r\n            setFilm(data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    if (film.id) {\r\n        return <div className=\"movie-details\" style={{backgroundImage: `url(https://image.tmdb.org/t/p/w500${film.backdrop_path})`}}>\r\n            <div className=\"blur\">\r\n                <div className=\"movie-details-left\">\r\n                    {film.poster_path ? <img src={`https://image.tmdb.org/t/p/w500${film.poster_path}`} alt={film.original_title} /> : <div style={{width: '550px', height: '740px', backgroundColor: 'black'}}>Poster not found</div>}\r\n                    <ul className=\"genres-list\">\r\n                        {film.genres.map(el => {\r\n                            return <li className=\"genre-item\" key={el.id}>{el.name}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"movie-details-right\">\r\n                    <h1 className=\"title-name\">{film.original_title}</h1>\r\n                    <p>{film.tagline}</p>\r\n                    <h1 className=\"title-rating\">Movie rating: {film.vote_average}</h1>\r\n                    <h1 className=\"title-overview\">Overview:</h1>\r\n                    <p className=\"overview\">{film.overview}</p>\r\n                    <div className=\"cast\">\r\n                        <NavLink className=\"cast-link\" activeClassName=\"cast-link-active\" to={`${url}/cast`}>Show cast</NavLink>\r\n                        <NavLink className=\"cast-link\" activeClassName=\"cast-link-active\"  to={`${url}/reviews`}>Show reviews</NavLink>\r\n                        \r\n                        <Route path=\"/movies/:movieId/cast\">\r\n                            <Cast film={film} />\r\n                        </Route>    \r\n                        <Route path=\"/movies/:movieId/reviews\">\r\n                            <Reviews id={film}/>\r\n                        </Route>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    } else {\r\n        return <h1>{film.status_message}</h1>\r\n    }\r\n}\r\n\r\nexport default MovieDetailsPage;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","fetch","fetchInfo","then","res","json","params","useRouteMatch","useState","cast","setCast","useEffect","FetchMovieCredits","movieId","length","className","map","el","profile_path","src","alt","name","character","reviews","setReviwes","FetchMovieReviews","data","results","console","log","i","author","content","film","setFilm","url","FetchMovieDetails","style","backgroundImage","backdrop_path","poster_path","original_title","width","height","backgroundColor","genres","tagline","vote_average","overview","activeClassName","to","path","status_message","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}