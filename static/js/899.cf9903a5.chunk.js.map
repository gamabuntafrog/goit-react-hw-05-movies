{"version":3,"file":"static/js/899.cf9903a5.chunk.js","mappings":"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","sources":["Services/FetchMovieDetails.js","Services/FetchMovieCredits.js","Components/Cast/Cast.js","Services/FetchMovieReviews.js","Components/Reviews/Reviews.js","Components/MovieDetailsPage/MovieDetailsPage.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import fetchInfo from \"./fetchInfo.json\";\n\nconst FetchMovieDetails = (id) => {\n  return fetch(\n    `${fetchInfo.URL}/movie/${id}?api_key=${fetchInfo.KEY}&language=en-US`\n  ).then((res) => res.json());\n};\n\nexport default FetchMovieDetails;\n","import fetchInfo from \"./fetchInfo.json\";\n\nconst FetchMovieCredits = (id) => {\n  return fetch(\n    `${fetchInfo.URL}/movie/${id}/credits?api_key=${fetchInfo.KEY}&language=en-US`\n  ).then((res) => res.json());\n};\n\nexport default FetchMovieCredits;\n","import FetchMovieCredits from \"../../Services/FetchMovieCredits\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Cast = () => {\n  const { params } = useRouteMatch();\n  const [cast, setCast] = useState(\"\");\n\n  useEffect(() => {\n    FetchMovieCredits(params.movieId).then((res) => {\n      setCast(res.cast);\n    });\n  }, []);\n\n  if (cast.length >= 1) {\n    return (\n      <ul className=\"cast-list\">\n        {cast.map((el) => {\n          return (\n            <li className=\"cast-item\" key={el.id}>\n              {el.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                  alt={el.name}\n                />\n              )}\n              {!el.profile_path && (\n                <div className=\"notFound\">\n                  <p>Not Found</p>\n                </div>\n              )}\n              <p>\n                {el.name}: {el.character}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return <h1>Not Found</h1>;\n  }\n};\n\nexport default Cast;\n","import fetchInfo from \"./fetchInfo.json\";\n\nconst FetchMovieReviews = (id) => {\n  return fetch(\n    `${fetchInfo.URL}/movie/${id}/reviews?api_key=${fetchInfo.KEY}&language=en-US&page=1`\n  ).then((res) => res.json());\n};\n\nexport default FetchMovieReviews;\n","import FetchMovieReviews from \"../../Services/FetchMovieReviews\";\nimport { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nconst Reviews = () => {\n  const { params } = useRouteMatch();\n  const [reviews, setReviwes] = useState(\"\");\n\n  useEffect(() => {\n    FetchMovieReviews(params.movieId).then((data) => {\n      setReviwes(data.results);\n    });\n  }, []);\n\n  console.log(reviews);\n  if (reviews.length >= 1) {\n    return (\n      <ul className=\"reviews-list\">\n        {reviews.map((el, i) => {\n          return (\n            <li className=\"review-item\" key={i}>\n              <h2>{el.author}:</h2>\n              <p>{el.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return <h1>Not Found</h1>;\n  }\n};\n\nexport default Reviews;\n","import { useRouteMatch, NavLink, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport FetchMovieDetails from \"../../Services/FetchMovieDetails\";\nimport Cast from \"../Cast\";\nimport Reviews from \"../Reviews\";\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState(\"\");\n  const { params, url } = useRouteMatch();\n\n  useEffect(() => {\n    FetchMovieDetails(params.movieId).then((data) => {\n      setFilm(data);\n    });\n  }, []);\n\n  if (film.id) {\n    return (\n      <div\n        className=\"movie-details\"\n        style={{\n          backgroundImage: `url(https://image.tmdb.org/t/p/w500${film.backdrop_path})`,\n        }}\n      >\n        <div className=\"blur\">\n          <div className=\"movie-details-left\">\n            {film.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                alt={film.original_title}\n              />\n            ) : (\n              <div\n                style={{\n                  width: \"550px\",\n                  height: \"740px\",\n                  backgroundColor: \"black\",\n                }}\n              >\n                Poster not found\n              </div>\n            )}\n            <ul className=\"genres-list\">\n              {film.genres.map((el) => {\n                return (\n                  <li className=\"genre-item\" key={el.id}>\n                    {el.name}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <div className=\"movie-details-right\">\n            <h1 className=\"title-name\">{film.original_title}</h1>\n            <p>{film.tagline}</p>\n            <h1 className=\"title-rating\">Movie rating: {film.vote_average}</h1>\n            <h1 className=\"title-overview\">Overview:</h1>\n            <p className=\"overview\">{film.overview}</p>\n            <div className=\"cast\">\n              <NavLink\n                className=\"cast-link\"\n                activeClassName=\"cast-link-active\"\n                to={`${url}/cast`}\n              >\n                Show cast\n              </NavLink>\n              <NavLink\n                className=\"cast-link\"\n                activeClassName=\"cast-link-active\"\n                to={`${url}/reviews`}\n              >\n                Show reviews\n              </NavLink>\n\n              <Route path=\"/movies/:movieId/cast\">\n                <Cast film={film} />\n              </Route>\n              <Route path=\"/movies/:movieId/reviews\">\n                <Reviews id={film} />\n              </Route>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <h1>{film.status_message}</h1>;\n  }\n};\n\nexport default MovieDetailsPage;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["id","fetch","fetchInfo","then","res","json","params","useRouteMatch","useState","cast","setCast","useEffect","FetchMovieCredits","movieId","length","className","map","el","profile_path","src","alt","name","character","reviews","setReviwes","FetchMovieReviews","data","results","console","log","i","author","content","film","setFilm","url","FetchMovieDetails","style","backgroundImage","backdrop_path","poster_path","original_title","width","height","backgroundColor","genres","tagline","vote_average","overview","activeClassName","to","path","status_message","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}